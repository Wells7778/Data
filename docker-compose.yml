services:
  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: weiby
      MONGO_INITDB_ROOT_PASSWORD: password
    command: mongod --auth
    volumes:
      - ./data/mongo/db:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u weiby -p password --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - db_network
  mysql:
    image: mysql:8.0.20
    platform: linux/amd64
    container_name: main
    hostname: main
    volumes:
      - ./data/mysql/8:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - db_network
    restart: always
    environment:
      - TZ=Asia/Taipei
    env_file:
      - ".env"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-time-zone=+08:00 --default-authentication-plugin=mysql_native_password --sql-mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20
  mysql57:
    image: mysql:5.7
    platform: linux/amd64
    container_name: mysql57
    hostname: mysql57
    volumes:
      - ./data/mysql/5.7:/var/lib/mysql
    ports:
      - 3307:3306
    networks:
      - db_network
    restart: always
    environment:
      - TZ=Asia/Taipei
    env_file:
      - ".env"
    command: ["mysqld",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--default-time-zone=+08:00",
      "--default-authentication-plugin=mysql_native_password"]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20
  mariadb:
    image: mariadb:10.11.7
    platform: linux/amd64
    container_name: mariadb
    hostname: mariadb
    volumes:
      - ./data/mariadb:/var/lib/mysql
    ports:
      - 3308:3306
    restart: always
    environment:
      - TZ=Asia/Taipei
    env_file:
      - ".env"
    command: ["mysqld",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--default-time-zone=+08:00"]
    networks:
      - db_network
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20
  redis:
    image: redis
    container_name: redis
    volumes:
      - ./data/redis/data:/data
    networks:
      - db_network
    ports:
      - :6379
    restart: always
  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile.elasticsearch
    container_name: elasticsearch_smartcn
    volumes:
      - ./data/elasticsearch/esdata:/usr/share/elasticsearch/data
    networks:
      - db_network
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    container_name: kibana
    networks:
      - db_network
    ports:
      - 5601:5601
  postgresql:
    image: postgres:17.2
    container_name: postgresql
    networks:
      - db_network
    ports:
      - 5432:5432
    volumes:
      - ./data/postgresql/data:/var/lib/postgresql/data
    restart: always
    environment:
      - TZ=Asia/Taipei
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ".env"
networks:
  db_network:
    name: db_network